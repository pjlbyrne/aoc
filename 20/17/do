#!/bin/python

import copy

vol = []
hw = 10
w = 2 * hw
for _ in range( w ):
  _vol = []
  for _ in range( w ):
    _vol.append([ [ '.' for _ in range( w )] for _ in range( w )])
  vol.append( _vol )

#for z, slice in enumerate( map ):
#  print( z )
#  print( slice )
#exit( 0 )

fname = 'da'

with open( fname ) as f:
  n = len( f.readlines() ) // 2

with open( fname ) as f:
  for x, l in enumerate( f ):
    l = l.strip()
    for y, c in enumerate( l ):
      #print( x, y, hw )
      vol[ x + hw - n ][ y + hw - n ][ hw ][ hw ] = c

def count_cell( x, y, z, q ):
    if x < 0 or x == w: return 0
    if y < 0 or y == w: return 0
    if z < 0 or z == w: return 0
    if q < 0 or q == w: return 0
    return 1 if vol[ x ][ y ][ z ][ q ] == '#' else 0

def count( vol ):
  ct = 0
  for x in range( w ):
    for y in range( w ):
      for z in range( w ):
        for q in range( w ):
          if vol[ x ][ y ][ z ][ q ] == '#':
            ct += 1
  return ct

def advance( vol ):
  _vol = copy.deepcopy( vol )
  tot = 0
  for x in range( w ):
    for y in range( w ):
      for z in range( w ):
        for q in range( w ):
          c = vol[ x ][ y ][ z ][ q ]
          ct = 0
          for dx in range( -1, 2 ):
           for dy in range( -1, 2 ):
             for dz in range( -1, 2 ):
               for dq in range( -1, 2 ):
                 if dx == 0 and dy == 0 and dz == 0 and dq == 0: continue
                 ct += count_cell( x + dx, y + dy, z + dz, q + dq )
          if c == '.':
            if ct == 3:
              c = '#'
          else:
            if ct != 2 and ct != 3:
              c = '.'
          _vol[ x ][ y ][ z ][ q ] = c
          if c == '#':
            tot += 1
  return _vol, tot
 
for i in range( 6 ):
  print( count( vol ))
  vol, tot = advance( vol )
  print( tot )

print( tot ) # 357 too low

