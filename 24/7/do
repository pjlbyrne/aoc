#!/bin/python

src = 'd0'
src = 'dat'

eqs = []
with open( src ) as f:
  for l in f:
    l = l.strip()
    n, l = l.split( ':' )
    l = [ int( x ) for x in l.split() ]
    l.reverse()
    eqs.append(( int( n ), l ))

#print( eqs )

def iter1( l1, l2 ):
  if not l1:
    yield l2
  else:
    x = l1.pop()
    for c in iter1( l1[ : ], l2[ : ] + [( '+', x )]):
      yield c
    for c in iter1( l1[ : ], l2[ : ] + [( '*', x )]):
      yield c

t1 = 0
for n, l in eqs:
  x0 = l.pop()
  for c in iter1( l, [] ):
    _n = x0
    for op, x in c:
      if op == '+':
        _n = _n + x
      else:
        _n = _n * x
   #print( 'c', c, 'n', n, '_n', _n, '<--------' if n == _n else '' )
    if _n == n:
      t1 += n
      break
print( 'part1', t1 )

eqs = []
with open( src ) as f:
  for l in f:
    l = l.strip()
    n, l = l.split( ':' )
    l = [ int( x ) for x in l.split() ]
    l.reverse()
    eqs.append(( int( n ), l ))

def iter2( l1, l2 ):
  if not l1:
    yield l2
  else:
    x = l1.pop()
    for c in iter2( l1[ : ], l2[ : ] + [( '+', x )]):
      yield c
    for c in iter2( l1[ : ], l2[ : ] + [( '*', x )]):
      yield c
    for c in iter2( l1[ : ], l2[ : ] + [( '||', x )]):
      yield c

t2 = 0
for n, l in eqs:
  x0 = l.pop()
  for c in iter2( l, [] ):
    _n = x0
    for op, x in c:
      if op == '+':
        _n = _n + x
      elif op == '*':
        _n = _n * x
      else:
        _n = int( str( _n ) + str( x ))
   #print( 'c', c, 'n', n, '_n', _n, '<--------' if n == _n else '' )
    if _n == n:
      t2 += n
      break

print( 'part2', t2 ) # 6083020513740 too low
