#!/bin/python

n0s, n1s = None, None

with open( 'dat' ) as f:
  for l in f:
    nxs = l.strip()
    n = len( nxs )
    #rint( nxs )
    if n0s is None:
      n0s = [ 0 ] * n
      n1s = [ 0 ] * n
    for i, x in enumerate( nxs ):
      if x == '0': n0s[ i ] += 1
      else: n1s[ i ] += 1

#print( 'n0s', n0s )
#print( 'n1s', n1s )

gl, el = [], []
for n0, n1 in zip( n0s, n1s ):
  if n0 > n1:
    gl.append( '0' )
    el.append( '1' )
  else:
    gl.append( '1' )
    el.append( '0' )

#print( 'gl', gl )
#print( 'el', el )

gamma = int( ''.join( gl ), 2 )
epsilon = int( ''.join( el ), 2 )

print( 'gamma * epsilon', gamma * epsilon )

# Part 2

l0 = []
with open( 'dat' ) as f:
  for l in f:
    l0.append( l.strip() )

#print( 'l0', l0 )

def get_o2( l, i0 ):
  if ( len( l ) == 1 ):
    return int( l[ 0 ], 2 )
  n = len( l[ 0 ])
  n0, n1 = 0, 0
  l0, l1 = [], []
  for nxs in l:
    if nxs[ i0 ] == '0':
      n0 += 1
      l0.append( nxs )
    else:
      n1 += 1
      l1.append( nxs )
  if n1 >= n0:
    return get_o2( l1, i0 + 1 )
  else:
    return get_o2( l0, i0 + 1 )


def get_co2( l, i0 ):
  if ( len( l ) == 1 ):
    return int( l[ 0 ], 2 )
  n = len( l[ 0 ])
  n0, n1 = 0, 0
  l0, l1 = [], []
  for nxs in l:
    if nxs[ i0 ] == '0':
      n0 += 1
      l0.append( nxs )
    else:
      n1 += 1
      l1.append( nxs )
  if n0 <= n1:
    return get_co2( l0, i0 + 1 )
  else:
    return get_co2( l1, i0 + 1 )

o2 = get_o2( l0, 0 )
co2 = get_co2( l0, 0 )

print( 'o2 * c02', o2 * co2 )

